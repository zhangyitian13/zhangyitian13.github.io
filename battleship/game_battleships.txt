游戏名称  battleships
游戏简介  指挥你的2艘舰船击败敌人的舰队
操作
鼠标单击 选中舰船/查看舰船属性 （音效）
鼠标右键 （smart）攻击敌人所在位置/移动寻路 （音效）
A键 + 鼠标右键 攻击地面（只是攻击地面不是移动攻击到某点）

游戏共分为x个时代（level），每次过关后获得奖励（可以选择提升攻击力/血量/射程/移动速度）

基础数据和函数类型：
1.object：舰船（圆模型），属性有中心位置（var pos_x，var pos_y），半径（var radius），脸的朝向（var orientation（船共有24个方向，orientation的取值从0-23,0为x轴正方向
1-23按逆时针数学方向定义，判定向量（a,b）方向时，向量与x轴正所成夹角在区间（15x - 7.5， 15x + 7.5）度时判定为orientation = x；）），船只的款式（var age，var type
属性age和type相当于代表了船的种类, age代表了船的时代如（石器时代/铜器时代/复兴/工业时代/原子时代/数字时代）type代表了船的类型 type = 1表示战舰 type = 2表示快速战舰
type = 3表示狭长船），最大血量（var hp），当前的血量（var current_hp）， 射程（var range）， 攻击力（var damage）， 移动速度（var movespeed），
本回合命令（var order（字符串）后面会解释）

2.object: 子弹（点模型）， 属性有位置（var pos_x, var pos_y）,弹道速度（var speed）（注意：在游戏中的任意时刻，一艘船只能有1个子弹，你可以理解为船的攻速很慢，需要保证
船的攻击间隔时间足够使得后一发子弹在前一发子弹击中地面后才能出现，即空中不能有2发同一艘战舰的子弹），子弹没有方向（全部是圆形图标，再写方向我要死了。。）

3.整体游戏运行模式：
var maptime（可以理解为回合数，每个回合相当于游戏中最短的时间单元，为了让画面看起来更加流畅，它最好比较小，比如使用转身orientation++；这样的操作需要1个回合，那么船
原地转一圈就有24帧）（调节游戏速度只要调节回合刷新速度即可比如每秒播放1回合和每秒播放两回合就是2倍速度）
每一回合有各种监听事件，比如回合1为第（0-1）秒回合2为第（1-2）秒，那么你所有在0-1秒之间的鼠标事件，都只会改变回合1playership的order，并且在回合2刚开始的时候执行回合1的
order，也就是说你在0.1秒点了鼠标右键移动和你在0.99秒点了右键移动，效果都是在第二回合刚开始时触发（有不确定的延迟，当然实际上每秒多播放几个回合延迟就小了），如果你既在
0.1秒点了鼠标命令，又在0.9秒命令他移动到另一个位置的话，以第二次的命令为准，（只要你速度足够快，在同一回合的极短时间里点2次，可以覆盖命令）

order只是简单的指令比如第一回合你在（0,0）你点击了右键移动到（1000， 0），然而你的移动力只有10，那么order会在逻辑判断里自动转化为moveto（10,0），并在下一回合，你的ship
的坐标会“突变”为（10,0）；order代表着突变，它只会记录当前下一步的指令（moveto（10,0）），而不是长远的指令moveto（1000,0）；

order包括"stop"/"shoot"/"moveto(x,y)"/"spin+"/"spin-"/"die"解释一下，"spin+"/"spin-"表示左旋右旋，就是下一回合的orientation++；orientation--；moveto（x，y）表示下一回合位置
突变为（x，y），stop表示下一回合什么都不动，shoot表示下一回合发射炮弹（在下一回合调用创建子弹之类的函数，并且在船身出现一个硝烟的动画），船站起来对撸的指令就相当于
stop；stop；stop；stop；stop；shoot；stop；stop；stop；stop；shoot；。。。。。
"die"表示船只沉没（在下一个回合会创建1个火光一闪的动画，并且调用另一个沉没函数在沉没点创建一个船沉没的动画，残骸慢慢下沉并且透明度变大，直到消失）
注意：每一回合只有一个order，我们暂时不允许船他边转身边移动边发炮。

每一个回合的循环
{
      实现上一个回合的order并逻辑判断；
      监听鼠标键盘事件
}

关于炮弹
-moz-transform:rotate(-90deg); -webkit-transform:rotate(-90deg);